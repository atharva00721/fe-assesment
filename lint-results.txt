C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\branch.tsx[24m
  85:9  warning  The 'childrenArray' conditional could make the dependencies of useEffect Hook (at line 92) change on every render. To fix this, wrap the initialization of 'childrenArray' in its own useMemo() Hook  react-hooks/exhaustive-deps

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\image.tsx[24m
  11:3  warning  'uint8Array' is defined but never used                                                                                                                                                                                                                                                   @typescript-eslint/no-unused-vars
  15:3  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\prompt-input.tsx[24m
   289:17  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-elementnext/next/no-img-element
   324:15  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-elementnext/next/no-img-element
   528:9   warning  The 'add' conditional could make the dependencies of useEffect Hook (at line 597) change on every render. To fix this, wrap the initialization of 'add' in its own useMemo() Hookreact-hooks/exhaustive-deps
   528:9   warning  The 'add' conditional could make the dependencies of useEffect Hook (at line 621) change on every render. To fix this, wrap the initialization of 'add' in its own useMemo() Hookreact-hooks/exhaustive-deps
   528:9   warning  The 'add' conditional could make the dependencies of useMemo Hook (at line 660) change on every render. To fix this, wrap the initialization of 'add' in its own useMemo() Hook                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           react-hooks/exhaustive-deps
   532:9   warning  The 'remove' conditional could make the dependencies of useMemo Hook (at line 660) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'remove' in its own useMemo() Hookreact-hooks/exhaustive-deps
   543:9   warning  The 'clear' conditional could make the dependencies of useMemo Hook (at line 660) change on every render. To fix this, wrap the initialization of 'clear' in its own useMemo() Hookreact-hooks/exhaustive-deps
   555:9   warning  The 'openFileDialog' conditional could make the dependencies of useMemo Hook (at line 660) change on every render. Move it inside the useMemo callback. Alternatively, wrap the initialization of 'openFileDialog' in its own useMemo() Hookreact-hooks/exhaustive-deps
   682:30  warning  '_id' is defined but never usedtypescript-eslint/no-unused-vars
  1141:17  error    Error: Cannot access refs during render

React refs are values that are not needed for rendering. Refs should only be accessed outside of render, such as in event handlers or effects. Accessing a ref value (the `current` property) during render can cause your component not to update as expected (https://react.dev/reference/react/useRef).

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\prompt-input.tsx:1141:17
  1139 |         className
  1140 |       )}
> 1141 |       disabled={!recognitionRef.current}
       |                 ^^^^^^^^^^^^^^^^^^^^^^^ Cannot access ref value during render
  1142 |       onClick={toggleListening}
  1143 |       {...props}
  1144 |     >                                                                                                                               react-hooks/refs
  1141:18  error    Error: Cannot access refs during render

React refs are values that are not needed for rendering. Refs should only be accessed outside of render, such as in event handlers or effects. Accessing a ref value (the `current` property) during render can cause your component not to update as expected (https://react.dev/reference/react/useRef).

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\prompt-input.tsx:1141:18
  1139 |         className
  1140 |       )}
> 1141 |       disabled={!recognitionRef.current}
       |                  ^^^^^^^^^^^^^^^^^^^^^^ Cannot access ref value during render
  1142 |       onClick={toggleListening}
  1143 |       {...props}
  1144 |     >

To initialize a ref only once, check that the ref is null with the pattern `if (ref.current == null) { ref.current = ... }`  react-hooks/refs

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\queue.tsx[24m
  154:3  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\reasoning.tsx[24m
  72:11  error  Error: Calling setState synchronously within an effect can trigger cascading renders

Effects are intended to synchronize state between React and external systems such as manually updating the DOM, state management libraries, or other platform APIs. In general, the body of an effect should do one or both of the following:
* Update external systems with the latest state from React.
* Subscribe for updates from some external system, calling setState in a callback function when external state changes.

Calling setState synchronously within an effect body causes cascading renders that can hurt performance, and is not recommended. (https://react.dev/learn/you-might-not-need-an-effect).

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\reasoning.tsx:72:11
  70 |       if (isStreaming) {
  71 |         if (startTime === null) {
> 72 |           setStartTime(Date.now());
     |           ^^^^^^^^^^^^ Avoid calling setState() directly within an effect
  73 |         }
  74 |       } else if (startTime !== null) {
  75 |         setDuration(Math.ceil((Date.now() - startTime) / MS_IN_S));  react-hooks/set-state-in-effect

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\shimmer.tsx[24m
  38:6  error  Error: Cannot create components during render

Components created during render will reset their state each time they are created. Declare components outside of render.

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\shimmer.tsx:38:6
  36 |
  37 |   return (
> 38 |     <MotionComponent
     |      ^^^^^^^^^^^^^^^ This component is created during render
  39 |       animate={{ backgroundPosition: "0% center" }}
  40 |       className={cn(
  41 |         "relative inline-block bg-[length:250%_100%,auto] bg-clip-text text-transparent",

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ai-elements\shimmer.tsx:28:27
  26 |   spread = 2,
  27 | }: TextShimmerProps) => {
> 28 |   const MotionComponent = motion.create(
     |                           ^^^^^^^^^^^^^^
> 29 |     Component as keyof JSX.IntrinsicElements
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 30 |   );
     | ^^^^ The component is created during render here
  31 |
  32 |   const dynamicSpread = useMemo(
  33 |     () => (children?.length ?? 0) * spread,  react-hooks/static-components

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ui\sidebar.tsx[24m
  611:26  error  Error: Cannot call impure function during render

`Math.random` is an impure function. Calling an impure function can produce unstable results that update unpredictably when the component happens to re-render. (https://react.dev/reference/rules/components-and-hooks-must-be-pure#components-and-hooks-must-be-idempotent).

C:\Users\athar\OneDrive\Documents\fe-assesment\components\ui\sidebar.tsx:611:26
  609 |   // Random width between 50 to 90%.
  610 |   const width = React.useMemo(() => {
> 611 |     return `${Math.floor(Math.random() * 40) + 50}%`
      |                          ^^^^^^^^^^^^^ Cannot call impure function
  612 |   }, [])
  613 |
  614 |   return (  react-hooks/purity

C:\Users\athar\OneDrive\Documents\fe-assesment\lib\questions.ts[24m
   35:30  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   38:46  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   51:61  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   52:45  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   54:20  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   60:45  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   61:58  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
   63:57  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  102:74  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

[1m✖ 27 problems (14 errors, 13 warnings)
[1m